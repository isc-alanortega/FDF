/*
    Módulo global de animaciones CSS
*/

/*
    Función principal para generar CSS de animaciones
    toma uno o más parámetros de forma 'param 1', 'param 2', ...
    que contienen directivas de animación
*/
@mixin animation($animate...) {
    $max: length($animate);
    $animations: '';

    @for $i from 1 through $max {
        $animations: #{$animations + nth($animate, $i)};

        @if $i < $max {
            $animations: #{$animations + ", "};
        }
    }

    -webkit-animation: $animations;
    animation: $animations;
}

/*
    Función que genera el CSS para keyframes
    toma como parámetro el nombre de la animación
*/
@mixin keyframes($animationName) {
    @-webkit-keyframes #{$animationName} {
        @content;
    }

    @keyframes #{$animationName} {
        @content;
    }
}

/* ----------------------------------------------
 * Generated by Animista
 * Licensed under FreeBSD License.
 * See http://animista.net/license for more info. 
 * w: http://animista.net, t: @cssanimista
 * ---------------------------------------------- */

@mixin anim-color-change-2x-frames($start-color, $end-color) {
    0% {
        background: $start-color;
    }

    100% {
        background: $end-color;
    }
}

@mixin anim-fill-color-change-2x-frames($start-color, $end-color) {
    0% {
        fill: $start-color;
    }

    100% {
        fill: $end-color;
    }
}

@mixin anim-font-color-change-2x-frames($start-color, $end-color) {
    0% {
        color: $start-color;
    }

    100% {
        color: $end-color;
    }
}

@mixin anim-shador-pop-tr-frames($color) {
    0% {
        -webkit-box-shadow: 0 0 $color, 0 0 $color, 0 0 $color, 0 0 $color, 0 0 $color, 0 0 $color, 0 0 $color, 0 0 $color;
        box-shadow: 0 0 $color, 0 0 $color, 0 0 $color, 0 0 $color, 0 0 $color, 0 0 $color, 0 0 $color, 0 0 $color;
        -webkit-transform: translateX(0) translateY(0);
        transform: translateX(0) translateY(0);
    }

    100% {
        -webkit-box-shadow: 1px -1px $color, 2px -2px $color, 3px -3px $color, 4px -4px;
        box-shadow: 1px -1px $color, 2px -2px $color, 3px -3px $color, 4px -4px $color;
        -webkit-transform: translateX(-4px) translateY(4px);
        transform: translateX(-4px) translateY(4px);
    }
}

@mixin anim-scale-up-hor-center-frames($initial-scale: 1, $end-scale: 2) {
    0% {
        -webkit-transform: scaleX($initial-scale);
        transform: scaleX($initial-scale);
    }

    100% {
        -webkit-transform: scaleX($end-scale);
        transform: scaleX($end-scale);
    }
}

@mixin anim-scale-up-center-frames($initial-scale: 0.9, $end-scale: 1.5) {
    0% {
        -webkit-transform: scale($initial-scale);
        transform: scale($initial-scale);
    }

    100% {
        -webkit-transform: scale($end-scale);
        transform: scale($end-scale);
    }
}


@mixin anim-slide-in-fwd-center-frames() {
    0% {
        -webkit-transform: translateZ(-1400px);
        transform: translateZ(-1400px);
        opacity: 0;
    }

    100% {
        -webkit-transform: translateZ(0);
        transform: translateZ(0);
        opacity: 1;
    }
}

@mixin anim-popup-center-frames() {
    0% {
        -webkit-transform: translateZ(0);
        transform: translateZ(0);
        -webkit-box-shadow: 0 0 0 0 rgba(0, 0, 0, 0);
        box-shadow: 0 0 0 0 rgba(0, 0, 0, 0);
    }

    100% {
        -webkit-transform: translateZ(50px);
        transform: translateZ(50px);
        -webkit-box-shadow: 0 0 8px 0px rgba(0, 0, 0, 0.35);
        box-shadow: 0 0 8px 0px rgba(0, 0, 0, 0.35);
    }
}

@mixin anim-shadow-drop-frames($start-shadow: drop-shadow(0px 0px 0px #00000000), $end-shadow) {
    0% {
        -webkit-filter: $start-shadow;
        filter: $start-shadow;
    }

    100% {
        -webkit-filter: $end-shadow;
        filter: $end-shadow;
    }
}